// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmosweightedgovernancesdk/voting/v1/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
}

func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryParamsRequest) ProtoMessage()    {}
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{0}
}
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsRequest proto.InternalMessageInfo

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryParamsResponse) ProtoMessage()    {}
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{1}
}
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParamsResponse proto.InternalMessageInfo

func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// QueryGetVoterRoleRequest defines the QueryGetVoterRoleRequest message.
type QueryGetVoterRoleRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *QueryGetVoterRoleRequest) Reset()         { *m = QueryGetVoterRoleRequest{} }
func (m *QueryGetVoterRoleRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetVoterRoleRequest) ProtoMessage()    {}
func (*QueryGetVoterRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{2}
}
func (m *QueryGetVoterRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetVoterRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetVoterRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetVoterRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetVoterRoleRequest.Merge(m, src)
}
func (m *QueryGetVoterRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetVoterRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetVoterRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetVoterRoleRequest proto.InternalMessageInfo

func (m *QueryGetVoterRoleRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// QueryGetVoterRoleResponse defines the QueryGetVoterRoleResponse message.
type QueryGetVoterRoleResponse struct {
	VoterRole VoterRole `protobuf:"bytes,1,opt,name=voter_role,json=voterRole,proto3" json:"voter_role"`
}

func (m *QueryGetVoterRoleResponse) Reset()         { *m = QueryGetVoterRoleResponse{} }
func (m *QueryGetVoterRoleResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetVoterRoleResponse) ProtoMessage()    {}
func (*QueryGetVoterRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{3}
}
func (m *QueryGetVoterRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetVoterRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetVoterRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetVoterRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetVoterRoleResponse.Merge(m, src)
}
func (m *QueryGetVoterRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetVoterRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetVoterRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetVoterRoleResponse proto.InternalMessageInfo

func (m *QueryGetVoterRoleResponse) GetVoterRole() VoterRole {
	if m != nil {
		return m.VoterRole
	}
	return VoterRole{}
}

// QueryAllVoterRoleRequest defines the QueryAllVoterRoleRequest message.
type QueryAllVoterRoleRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllVoterRoleRequest) Reset()         { *m = QueryAllVoterRoleRequest{} }
func (m *QueryAllVoterRoleRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllVoterRoleRequest) ProtoMessage()    {}
func (*QueryAllVoterRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{4}
}
func (m *QueryAllVoterRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllVoterRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllVoterRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllVoterRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllVoterRoleRequest.Merge(m, src)
}
func (m *QueryAllVoterRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllVoterRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllVoterRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllVoterRoleRequest proto.InternalMessageInfo

func (m *QueryAllVoterRoleRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryAllVoterRoleResponse defines the QueryAllVoterRoleResponse message.
type QueryAllVoterRoleResponse struct {
	VoterRole  []VoterRole         `protobuf:"bytes,1,rep,name=voter_role,json=voterRole,proto3" json:"voter_role"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllVoterRoleResponse) Reset()         { *m = QueryAllVoterRoleResponse{} }
func (m *QueryAllVoterRoleResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllVoterRoleResponse) ProtoMessage()    {}
func (*QueryAllVoterRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2ee4582cc4035b6, []int{5}
}
func (m *QueryAllVoterRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllVoterRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllVoterRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllVoterRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllVoterRoleResponse.Merge(m, src)
}
func (m *QueryAllVoterRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllVoterRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllVoterRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllVoterRoleResponse proto.InternalMessageInfo

func (m *QueryAllVoterRoleResponse) GetVoterRole() []VoterRole {
	if m != nil {
		return m.VoterRole
	}
	return nil
}

func (m *QueryAllVoterRoleResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryParamsResponse")
	proto.RegisterType((*QueryGetVoterRoleRequest)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryGetVoterRoleRequest")
	proto.RegisterType((*QueryGetVoterRoleResponse)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryGetVoterRoleResponse")
	proto.RegisterType((*QueryAllVoterRoleRequest)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryAllVoterRoleRequest")
	proto.RegisterType((*QueryAllVoterRoleResponse)(nil), "cosmosweightedgovernancesdk.voting.v1.QueryAllVoterRoleResponse")
}

func init() {
	proto.RegisterFile("cosmosweightedgovernancesdk/voting/v1/query.proto", fileDescriptor_e2ee4582cc4035b6)
}

var fileDescriptor_e2ee4582cc4035b6 = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4d, 0x8b, 0x13, 0x31,
	0x1c, 0xc6, 0x9b, 0xba, 0x16, 0x36, 0xbe, 0x80, 0x71, 0x0f, 0x6b, 0x91, 0x51, 0x06, 0x7c, 0xa1,
	0x30, 0x13, 0xa7, 0x8b, 0x8b, 0xeb, 0xc1, 0x97, 0x1e, 0xec, 0xc5, 0x43, 0x1d, 0xd0, 0x83, 0x17,
	0x49, 0x77, 0x42, 0x36, 0xb4, 0x4d, 0x66, 0x27, 0xd9, 0xd1, 0x45, 0xbc, 0xf8, 0x09, 0x04, 0xbf,
	0x84, 0x47, 0x4f, 0x5e, 0xfc, 0x02, 0x7b, 0x11, 0x56, 0xbc, 0x78, 0x12, 0x69, 0x17, 0xfc, 0x1a,
	0x32, 0x49, 0x6a, 0x5b, 0xb7, 0xea, 0xb4, 0x78, 0x29, 0x43, 0xc8, 0xf3, 0xfc, 0x7f, 0x4f, 0xf2,
	0xa4, 0x30, 0xda, 0x96, 0x6a, 0x20, 0xd5, 0x73, 0xca, 0xd9, 0x8e, 0xa6, 0x09, 0x93, 0x39, 0xcd,
	0x04, 0x11, 0xdb, 0x54, 0x25, 0x3d, 0x9c, 0x4b, 0xcd, 0x05, 0xc3, 0x79, 0x84, 0x77, 0xf7, 0x68,
	0xb6, 0x1f, 0xa6, 0x99, 0xd4, 0x12, 0x5d, 0xf9, 0x8b, 0x24, 0xb4, 0x92, 0x30, 0x8f, 0xea, 0xe7,
	0xc8, 0x80, 0x0b, 0x89, 0xcd, 0xaf, 0x55, 0xd6, 0x1b, 0x56, 0x89, 0xbb, 0x44, 0x51, 0x6b, 0x89,
	0xf3, 0xa8, 0x4b, 0x35, 0x89, 0x70, 0x4a, 0x18, 0x17, 0x44, 0x73, 0x29, 0xdc, 0xde, 0x66, 0x39,
	0xb0, 0x94, 0x64, 0x64, 0xa0, 0x9c, 0x66, 0xb3, 0x9c, 0x26, 0x97, 0x9a, 0x66, 0xcf, 0x32, 0xd9,
	0xa7, 0x4e, 0xb7, 0xc6, 0x24, 0x93, 0xe6, 0x13, 0x17, 0x5f, 0x6e, 0xf5, 0x22, 0x93, 0x92, 0xf5,
	0x29, 0x26, 0x29, 0xc7, 0x44, 0x08, 0xa9, 0x0d, 0x9e, 0x9b, 0xe5, 0xaf, 0x41, 0xf4, 0xa8, 0x48,
	0xd0, 0x31, 0x00, 0x31, 0xdd, 0xdd, 0xa3, 0x4a, 0xfb, 0x0c, 0x9e, 0x9f, 0x59, 0x55, 0xa9, 0x14,
	0x8a, 0xa2, 0x0e, 0xac, 0x59, 0xd0, 0x75, 0x70, 0x19, 0x5c, 0x3f, 0xd5, 0x0c, 0xc2, 0x52, 0x67,
	0x18, 0x5a, 0x9b, 0xd6, 0xea, 0xc1, 0xb7, 0x4b, 0x95, 0x77, 0x3f, 0xde, 0x37, 0x40, 0xec, 0x7c,
	0xfc, 0x06, 0x5c, 0x37, 0x83, 0xda, 0x54, 0x3f, 0x29, 0xe2, 0xc4, 0xb2, 0x4f, 0x1d, 0x04, 0x3a,
	0x0b, 0xab, 0x3c, 0x31, 0x93, 0x56, 0xe2, 0x2a, 0x4f, 0xfc, 0x0c, 0x5e, 0x98, 0xb3, 0xd7, 0xa1,
	0x3d, 0x86, 0x70, 0x72, 0x1e, 0x0e, 0xef, 0x46, 0x49, 0xbc, 0x5f, 0x6e, 0xad, 0x95, 0x82, 0x30,
	0x5e, 0xcd, 0xc7, 0x0b, 0x7e, 0xd7, 0xf1, 0xdd, 0xef, 0xf7, 0x8f, 0xf1, 0x3d, 0x80, 0x70, 0x72,
	0xdd, 0x6e, 0xe4, 0x55, 0x37, 0x32, 0x2c, 0xba, 0x11, 0xda, 0xba, 0xb9, 0x6e, 0x84, 0x1d, 0xc2,
	0xc6, 0xda, 0x78, 0x4a, 0xe9, 0x7f, 0x04, 0x2e, 0xd8, 0xec, 0x90, 0x3f, 0x04, 0x3b, 0xf1, 0x5f,
	0x82, 0xa1, 0xf6, 0x0c, 0x7c, 0xd5, 0xc0, 0x5f, 0xfb, 0x27, 0xbc, 0x65, 0x9a, 0xa6, 0x6f, 0x1e,
	0xad, 0xc0, 0x93, 0x86, 0x1e, 0x7d, 0x00, 0xb0, 0x66, 0x6f, 0x1a, 0x6d, 0x95, 0x04, 0x3c, 0x5e,
	0xbd, 0xfa, 0xed, 0x65, 0xa4, 0x96, 0xcb, 0xbf, 0xf9, 0xfa, 0xcb, 0xd1, 0xdb, 0x2a, 0x46, 0x01,
	0xa6, 0x62, 0xa7, 0x90, 0x24, 0xc1, 0x44, 0x1e, 0x28, 0x4d, 0x7a, 0xe6, 0xe9, 0xfc, 0xf6, 0xea,
	0xd0, 0x67, 0x00, 0x4f, 0x4f, 0x97, 0x0a, 0xdd, 0x5d, 0x84, 0x61, 0x4e, 0x75, 0xeb, 0xf7, 0x96,
	0x37, 0x70, 0x51, 0xee, 0x98, 0x28, 0xb7, 0xd0, 0x66, 0xc9, 0x28, 0x93, 0x8e, 0xe0, 0x97, 0x3c,
	0x79, 0x85, 0x3e, 0x01, 0x78, 0xe6, 0x21, 0x57, 0xcb, 0x86, 0x9a, 0xd3, 0xf7, 0xc5, 0x42, 0xcd,
	0xeb, 0xb2, 0xbf, 0x65, 0x42, 0x6d, 0xa0, 0x68, 0xe1, 0x50, 0xad, 0xf6, 0xc1, 0xd0, 0x03, 0x87,
	0x43, 0x0f, 0x7c, 0x1f, 0x7a, 0xe0, 0xcd, 0xc8, 0xab, 0x1c, 0x8e, 0xbc, 0xca, 0xd7, 0x91, 0x57,
	0x79, 0x1a, 0x58, 0xaa, 0x60, 0x8c, 0x35, 0x63, 0x99, 0xf4, 0xf0, 0x8b, 0xb1, 0xa1, 0xde, 0x4f,
	0xa9, 0xea, 0xd6, 0xcc, 0xff, 0xde, 0xc6, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x76, 0xf3,
	0x4a, 0x32, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// ListVoterRole Queries a list of VoterRole items.
	GetVoterRole(ctx context.Context, in *QueryGetVoterRoleRequest, opts ...grpc.CallOption) (*QueryGetVoterRoleResponse, error)
	// ListVoterRole defines the ListVoterRole RPC.
	ListVoterRole(ctx context.Context, in *QueryAllVoterRoleRequest, opts ...grpc.CallOption) (*QueryAllVoterRoleResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/cosmosweightedgovernancesdk.voting.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetVoterRole(ctx context.Context, in *QueryGetVoterRoleRequest, opts ...grpc.CallOption) (*QueryGetVoterRoleResponse, error) {
	out := new(QueryGetVoterRoleResponse)
	err := c.cc.Invoke(ctx, "/cosmosweightedgovernancesdk.voting.v1.Query/GetVoterRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListVoterRole(ctx context.Context, in *QueryAllVoterRoleRequest, opts ...grpc.CallOption) (*QueryAllVoterRoleResponse, error) {
	out := new(QueryAllVoterRoleResponse)
	err := c.cc.Invoke(ctx, "/cosmosweightedgovernancesdk.voting.v1.Query/ListVoterRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// ListVoterRole Queries a list of VoterRole items.
	GetVoterRole(context.Context, *QueryGetVoterRoleRequest) (*QueryGetVoterRoleResponse, error)
	// ListVoterRole defines the ListVoterRole RPC.
	ListVoterRole(context.Context, *QueryAllVoterRoleRequest) (*QueryAllVoterRoleResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}
func (*UnimplementedQueryServer) GetVoterRole(ctx context.Context, req *QueryGetVoterRoleRequest) (*QueryGetVoterRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVoterRole not implemented")
}
func (*UnimplementedQueryServer) ListVoterRole(ctx context.Context, req *QueryAllVoterRoleRequest) (*QueryAllVoterRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVoterRole not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmosweightedgovernancesdk.voting.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetVoterRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetVoterRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetVoterRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmosweightedgovernancesdk.voting.v1.Query/GetVoterRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetVoterRole(ctx, req.(*QueryGetVoterRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListVoterRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllVoterRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ListVoterRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmosweightedgovernancesdk.voting.v1.Query/ListVoterRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ListVoterRole(ctx, req.(*QueryAllVoterRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var Query_serviceDesc = _Query_serviceDesc
var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmosweightedgovernancesdk.voting.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Params",
			Handler:    _Query_Params_Handler,
		},
		{
			MethodName: "GetVoterRole",
			Handler:    _Query_GetVoterRole_Handler,
		},
		{
			MethodName: "ListVoterRole",
			Handler:    _Query_ListVoterRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmosweightedgovernancesdk/voting/v1/query.proto",
}

func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetVoterRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetVoterRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetVoterRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetVoterRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetVoterRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetVoterRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.VoterRole.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllVoterRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllVoterRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllVoterRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllVoterRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllVoterRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllVoterRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.VoterRole) > 0 {
		for iNdEx := len(m.VoterRole) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VoterRole[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetVoterRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovQuery(uint64(m.Id))
	}
	return n
}

func (m *QueryGetVoterRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.VoterRole.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllVoterRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllVoterRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.VoterRole) > 0 {
		for _, e := range m.VoterRole {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetVoterRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetVoterRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetVoterRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetVoterRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetVoterRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetVoterRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.VoterRole.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllVoterRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllVoterRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllVoterRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllVoterRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllVoterRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllVoterRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoterRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoterRole = append(m.VoterRole, VoterRole{})
			if err := m.VoterRole[len(m.VoterRole)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
