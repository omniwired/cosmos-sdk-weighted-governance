// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: enhancedgovernancestaking/voting/v1/voter_role.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// VoterRole defines the VoterRole message.
type VoterRole struct {
	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address    string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Role       string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Multiplier string `protobuf:"bytes,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	AddedAt    int64  `protobuf:"varint,5,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	AddedBy    string `protobuf:"bytes,6,opt,name=added_by,json=addedBy,proto3" json:"added_by,omitempty"`
	Creator    string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *VoterRole) Reset()         { *m = VoterRole{} }
func (m *VoterRole) String() string { return proto.CompactTextString(m) }
func (*VoterRole) ProtoMessage()    {}
func (*VoterRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc585e9444f3af9, []int{0}
}
func (m *VoterRole) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoterRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoterRole.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoterRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoterRole.Merge(m, src)
}
func (m *VoterRole) XXX_Size() int {
	return m.Size()
}
func (m *VoterRole) XXX_DiscardUnknown() {
	xxx_messageInfo_VoterRole.DiscardUnknown(m)
}

var xxx_messageInfo_VoterRole proto.InternalMessageInfo

func (m *VoterRole) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VoterRole) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *VoterRole) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *VoterRole) GetMultiplier() string {
	if m != nil {
		return m.Multiplier
	}
	return ""
}

func (m *VoterRole) GetAddedAt() int64 {
	if m != nil {
		return m.AddedAt
	}
	return 0
}

func (m *VoterRole) GetAddedBy() string {
	if m != nil {
		return m.AddedBy
	}
	return ""
}

func (m *VoterRole) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*VoterRole)(nil), "enhancedgovernancestaking.voting.v1.VoterRole")
}

func init() {
	proto.RegisterFile("enhancedgovernancestaking/voting/v1/voter_role.proto", fileDescriptor_cdc585e9444f3af9)
}

var fileDescriptor_cdc585e9444f3af9 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0x31, 0x4e, 0xc3, 0x30,
	0x14, 0x8d, 0xd3, 0xd0, 0x52, 0x0f, 0x0c, 0x9e, 0xcc, 0x62, 0x45, 0xb0, 0x44, 0x48, 0x0d, 0xaa,
	0xe0, 0x02, 0x54, 0x9c, 0x20, 0x03, 0x03, 0x4b, 0xe5, 0xf6, 0x7f, 0x15, 0x8b, 0x10, 0x47, 0x8e,
	0x89, 0xc8, 0x2d, 0xb8, 0x0e, 0x37, 0x60, 0xec, 0xc8, 0x88, 0x92, 0x8b, 0x20, 0xbb, 0x98, 0xb0,
	0x74, 0xf2, 0xfb, 0xff, 0xe9, 0xf9, 0xfd, 0xf7, 0xe8, 0x2d, 0x56, 0x4f, 0xb2, 0xda, 0x22, 0xec,
	0x74, 0x8b, 0xa6, 0x72, 0xb0, 0xb1, 0xf2, 0x59, 0x55, 0xbb, 0xeb, 0x56, 0x5b, 0xff, 0x2c, 0x1d,
	0x42, 0xb3, 0x36, 0xba, 0xc4, 0xbc, 0x36, 0xda, 0x6a, 0x76, 0x79, 0x54, 0x95, 0x1f, 0x54, 0x79,
	0xbb, 0xbc, 0xf8, 0x20, 0x74, 0xfe, 0xe0, 0x94, 0x85, 0x2e, 0x91, 0x9d, 0xd1, 0x58, 0x01, 0x27,
	0x29, 0xc9, 0x92, 0x22, 0x56, 0xc0, 0x38, 0x9d, 0x49, 0x00, 0x83, 0x4d, 0xc3, 0xe3, 0x94, 0x64,
	0xf3, 0x22, 0x8c, 0x8c, 0xd1, 0xc4, 0x59, 0xf1, 0x89, 0x5f, 0x7b, 0xcc, 0x04, 0xa5, 0x2f, 0xaf,
	0xa5, 0x55, 0x75, 0xa9, 0xd0, 0xf0, 0xc4, 0x33, 0xff, 0x36, 0xec, 0x9c, 0x9e, 0x4a, 0x00, 0x84,
	0xb5, 0xb4, 0xfc, 0x24, 0x25, 0xd9, 0xc4, 0x7f, 0x87, 0x70, 0x67, 0x47, 0x6a, 0xd3, 0xf1, 0xe9,
	0x9f, 0x13, 0xc2, 0xaa, 0x73, 0x37, 0x6c, 0x0d, 0x4a, 0xab, 0x0d, 0x9f, 0x1d, 0x98, 0xdf, 0x71,
	0x75, 0xff, 0xd9, 0x0b, 0xb2, 0xef, 0x05, 0xf9, 0xee, 0x05, 0x79, 0x1f, 0x44, 0xb4, 0x1f, 0x44,
	0xf4, 0x35, 0x88, 0xe8, 0xf1, 0x2a, 0x44, 0x5f, 0x8c, 0xd9, 0x17, 0xa1, 0xb2, 0xb7, 0x50, 0x9a,
	0xed, 0x6a, 0x6c, 0x36, 0x53, 0xdf, 0xd6, 0xcd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x37, 0x1a,
	0x14, 0x3e, 0x65, 0x01, 0x00, 0x00,
}

func (m *VoterRole) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoterRole) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoterRole) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintVoterRole(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AddedBy) > 0 {
		i -= len(m.AddedBy)
		copy(dAtA[i:], m.AddedBy)
		i = encodeVarintVoterRole(dAtA, i, uint64(len(m.AddedBy)))
		i--
		dAtA[i] = 0x32
	}
	if m.AddedAt != 0 {
		i = encodeVarintVoterRole(dAtA, i, uint64(m.AddedAt))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Multiplier) > 0 {
		i -= len(m.Multiplier)
		copy(dAtA[i:], m.Multiplier)
		i = encodeVarintVoterRole(dAtA, i, uint64(len(m.Multiplier)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintVoterRole(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintVoterRole(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintVoterRole(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintVoterRole(dAtA []byte, offset int, v uint64) int {
	offset -= sovVoterRole(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *VoterRole) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovVoterRole(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovVoterRole(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovVoterRole(uint64(l))
	}
	l = len(m.Multiplier)
	if l > 0 {
		n += 1 + l + sovVoterRole(uint64(l))
	}
	if m.AddedAt != 0 {
		n += 1 + sovVoterRole(uint64(m.AddedAt))
	}
	l = len(m.AddedBy)
	if l > 0 {
		n += 1 + l + sovVoterRole(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovVoterRole(uint64(l))
	}
	return n
}

func sovVoterRole(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozVoterRole(x uint64) (n int) {
	return sovVoterRole(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VoterRole) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVoterRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoterRole: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoterRole: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVoterRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVoterRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVoterRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVoterRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multiplier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVoterRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVoterRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Multiplier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddedAt", wireType)
			}
			m.AddedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVoterRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVoterRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVoterRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVoterRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVoterRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVoterRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipVoterRole(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowVoterRole
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVoterRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthVoterRole
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupVoterRole
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthVoterRole
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthVoterRole        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowVoterRole          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupVoterRole = fmt.Errorf("proto: unexpected end of group")
)
